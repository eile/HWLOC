.TH "Advanced I/O object traversal helpers" 3 "Tue May 22 2012" "Version 1.5a1git0de3530c33a9c221969822ab079fb4d0dde6387c" "Hardware Locality (hwloc)" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Advanced I/O object traversal helpers \- 
.SS "Functions"

.in +1c
.ti -1c
.RI "static inline \fBhwloc_obj_t\fP \fBhwloc_get_non_io_ancestor_obj\fP (\fBhwloc_topology_t\fP topology , \fBhwloc_obj_t\fP ioobj)"
.br
.ti -1c
.RI "static inline \fBhwloc_obj_t\fP \fBhwloc_get_next_pcidev\fP (\fBhwloc_topology_t\fP topology, \fBhwloc_obj_t\fP prev)"
.br
.ti -1c
.RI "static inline \fBhwloc_obj_t\fP \fBhwloc_get_pcidev_by_busid\fP (\fBhwloc_topology_t\fP topology, unsigned domain, unsigned bus, unsigned dev, unsigned func)"
.br
.ti -1c
.RI "static inline \fBhwloc_obj_t\fP \fBhwloc_get_pcidev_by_busidstring\fP (\fBhwloc_topology_t\fP topology, const char *busid)"
.br
.ti -1c
.RI "static inline \fBhwloc_obj_t\fP \fBhwloc_get_pcidev_by_display\fP (\fBhwloc_topology_t\fP topology, const int port, const int device)"
.br
.ti -1c
.RI "static inline \fBhwloc_obj_t\fP \fBhwloc_get_next_osdev\fP (\fBhwloc_topology_t\fP topology, \fBhwloc_obj_t\fP prev)"
.br
.ti -1c
.RI "static inline \fBhwloc_obj_t\fP \fBhwloc_get_next_bridge\fP (\fBhwloc_topology_t\fP topology, \fBhwloc_obj_t\fP prev)"
.br
.ti -1c
.RI "static inline int \fBhwloc_bridge_covers_pcibus\fP (\fBhwloc_obj_t\fP bridge, unsigned domain, unsigned bus)"
.br
.ti -1c
.RI "static inline \fBhwloc_obj_t\fP \fBhwloc_get_hostbridge_by_pcibus\fP (\fBhwloc_topology_t\fP topology, unsigned domain, unsigned bus)"
.br
.ti -1c
.RI " int \fBhwloc_get_pcidevice_cpuset\fP (\fBhwloc_topology_t\fP topology, const \fBhwloc_obj_t\fP pcidev_obj, \fBhwloc_bitmap_t\fP *cpuset)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "static inline int hwloc_bridge_covers_pcibus (\fBhwloc_obj_t\fPbridge, unsigneddomain, unsignedbus)\fC [static]\fP"
.SS "static inline \fBhwloc_obj_t\fP hwloc_get_hostbridge_by_pcibus (\fBhwloc_topology_t\fPtopology, unsigneddomain, unsignedbus)\fC [static]\fP"
.PP
Find the hostbridge that covers the given PCI bus. This is useful for finding the locality of a bus because it is the hostbridge parent cpuset. 
.SS "static inline \fBhwloc_obj_t\fP hwloc_get_next_bridge (\fBhwloc_topology_t\fPtopology, \fBhwloc_obj_t\fPprev)\fC [static]\fP"
.PP
Get the next bridge in the system. \fBReturns:\fP
.RS 4
the first bridge if \fCprev\fP is \fCNULL\fP. 
.RE
.PP

.SS "static inline \fBhwloc_obj_t\fP hwloc_get_next_osdev (\fBhwloc_topology_t\fPtopology, \fBhwloc_obj_t\fPprev)\fC [static]\fP"
.PP
Get the next OS device in the system. \fBReturns:\fP
.RS 4
the first OS device if \fCprev\fP is \fCNULL\fP. 
.RE
.PP

.SS "static inline \fBhwloc_obj_t\fP hwloc_get_next_pcidev (\fBhwloc_topology_t\fPtopology, \fBhwloc_obj_t\fPprev)\fC [static]\fP"
.PP
Get the next PCI device in the system. \fBReturns:\fP
.RS 4
the first PCI device if \fCprev\fP is \fCNULL\fP. 
.RE
.PP

.SS "static inline \fBhwloc_obj_t\fP hwloc_get_non_io_ancestor_obj (\fBhwloc_topology_t\fP topology, \fBhwloc_obj_t\fPioobj)\fC [static]\fP"
.PP
Get the first non-I/O ancestor object. Given the I/O object \fCioobj\fP, find the smallest non-I/O ancestor object. This regular object may then be used for binding because its locality is the same as \fCioobj\fP. 
.SS "static inline \fBhwloc_obj_t\fP hwloc_get_pcidev_by_busid (\fBhwloc_topology_t\fPtopology, unsigneddomain, unsignedbus, unsigneddev, unsignedfunc)\fC [static]\fP"
.PP
Find the PCI device object matching the PCI bus id given domain, bus device and function PCI bus id. 
.SS "static inline \fBhwloc_obj_t\fP hwloc_get_pcidev_by_busidstring (\fBhwloc_topology_t\fPtopology, const char *busid)\fC [static]\fP"
.PP
Find the PCI device object matching the PCI bus id given as a string xxxx:yy:zz.t or yy:zz.t. 
.SS "static inline \fBhwloc_obj_t\fP hwloc_get_pcidev_by_display (\fBhwloc_topology_t\fPtopology, const intport, const intdevice)\fC [static]\fP"
.PP
Find the PCI device object matching the GPU connected to the display defined by its port and device as [:][port][.][device]. 
.SS " int hwloc_get_pcidevice_cpuset (\fBhwloc_topology_t\fPtopology, const \fBhwloc_obj_t\fPpcidev_obj, \fBhwloc_bitmap_t\fP *cpuset)"
.PP
Returns a cpuset of the socket attached to the host bridge for a given PCI device defined by its info. This is useful for retrieving the cpuset of the socket attached to the host bridge where the PCI device defined by its bus, domain, function, device ID's is connected in the topology. 
.SH "Author"
.PP 
Generated automatically by Doxygen for Hardware Locality (hwloc) from the source code.
